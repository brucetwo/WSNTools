// *** WARNING ****** WARNING ****** WARNING ****** WARNING ****** WARNING ***
// ***                                                                     ***
// *** This file was automatically generated by generateRpc.pl.   ***
// *** Any and all changes made to this file WILL BE LOST!                 ***
// ***                                                                     ***
// *** WARNING ****** WARNING ****** WARNING ****** WARNING ****** WARNING ***

includes Rpc;

configuration RpcC {
  provides {
    interface SplitControl;
  }
}
implementation {

  components 
    LedsC,
    RpcM,
    SerialActiveMessageC as AM;
/*#ifndef RPC_NO_DRIP
  components
    DripC, 
    DripStateC,
    DestC;
#endif // !RPC_NO_DRIP
#ifndef RPC_NO_DRAIN
  components
    DrainC;
#endif // !RPC_NO_DRAIN*/

    components BlinkC;
    components RamSymbolsM;
    RpcM.BlinkC_initLeds -> BlinkC.initLeds;
    RpcM.BlinkC_initLeds2 -> BlinkC.initLeds2;
    RpcM.RamSymbolsM_peek -> RamSymbolsM.peek;
    RpcM.RamSymbolsM_poke -> RamSymbolsM.poke;

  //now do all the wiring for the rpc communication:
  SplitControl = AM;
  SplitControl = RpcM.SplitControl;
  AM.Leds -> LedsC;
  RpcM.Leds -> LedsC;
  
/*#ifndef RPC_NO_DRAIN
  RpcM.SubControl -> DrainC;
#endif //!RPC_NO_DRAIN
#ifndef RPC_NO_DRIP
  RpcM.SubControl -> DripC;
#endif // !RPC_NO_DRIP*/

  //AM wiring
  RpcM.Receive -> AM.Receive[AM_RPCCOMMANDMSG];
  RpcM.AMSend -> AM.AMSend[AM_RPCRESPONSEMSG];
  RpcM.AMPacket -> AM.AMPacket;

/*#ifndef RPC_NO_DRIP
  //drip wiring
  RpcM.CommandReceiveDrip -> DripC.Receive[AM_RPCCOMMANDMSG];
  RpcM.CommandDrip -> DripC.Drip[AM_RPCCOMMANDMSG];
  DripC.DripState[AM_RPCCOMMANDMSG] -> DripStateC.DripState[unique("DripState")];
  RpcM.Dest -> DestC;
#endif // !RPC_NO_DRIP

  //drain wiring
#ifndef RPC_NO_DRAIN
  RpcM.ResponseSendMsg -> DrainC.SendMsg[AM_RPCRESPONSEMSG];
  RpcM.DrainSend -> DrainC.Send[AM_RPCRESPONSEMSG];
#else
  RpcM.ResponseSendMsg -> GenericComm.SendMsg[AM_RPCRESPONSEMSG];
#endif // !RPC_NO_DRAIN

//  RpcM.ErrorSendMsgDrain -> DrainC.SendMsg[AM_RPCERRORMSG];*/


}
